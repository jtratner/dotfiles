


#shortcut to this dotfiles path is $ZSH
export ZSH=$HOME/.dotfiles
if [[ -a ~/.pythonrc.py ]]
then
    export PYTHONSTARTUP=~/.pythonrc.py
fi
# project folders that you can quickly tab to (in order: c, v, p, j, d, s)
export PROJECTS=~/projects
export VIMPROJECTS=$PROJECTS/viml
export PYTHONPROJECTS=$PROJECTS/python
# export JAVAPROJECTS=$PROJECTS/java
export JAVASCRIPTPROJECTS=$PROJECTS/js
export DROPBOX=~/Dropbox
export SLIDEDECKS=$PROJECTS/slides
export RAILSPROJECTS=$PROJECTS/rails

# for stupid BSD ls (osx)
export LSCOLORS="Dxgxcxdxcxegedabagacad"
# for GNU ls (linux) (I wonder what this looks like)
export LS_COLORS='di=93:fi=0:ln=96:pi=5:so=5:bd=5:cd=5:or=31:mi=31:ex=32'

# use .localrc for SUPER SECRET CRAP that you don't
# want in your public, versioned repo.
# particularly useful to change default python, etc
if [[ -a ~/.localrc ]]
then
    source ~/.localrc
fi
# skipping virtualenvwrapper for now, because it adds a lot of complexity
# # source virtualenvwrapper *first*
# if [[ -a /usr/local/bin/virtualenvwrapper.sh ]]
# then
#     source /usr/local/bin/virtualenvwrapper.sh
# fi

# source the .bashrc with this, which converts the issue-laden-thangs to sweet, compatible zsh-functions!
#bash_source() {
#  alias shopt=':'
#  alias _expand=_bash_expand
#  alias _complete=_bash_comp
#  emulate -L sh
#  setopt kshglob noshglob braceexpand
#
#  source "$@"
#}
#bash_source("$HOME/.bashrc")
# source every .zsh file in this rep
for config_file ($ZSH/**/*.zsh) source $config_file


# ls colors! Whee! :)
# for stupid BSD ls (osx)
export LSCOLORS="Dxgxcxdxcxegedabagacad"
# for GNU ls (linux) (I wonder what this looks like)
export LS_COLORS='di=93:fi=0:ln=96:pi=5:so=5:bd=5:cd=5:or=31:mi=31:ex=32'
# load spectrum colors
autoload spectrum && spectrum
# the magic history, just like tcsh has
autoload -U history-search-end
zle -N history-beginning-search-backward-end history-search-end
zle -N history-beginning-search-forward-end history-search-end
# up arrow or ^o will complete the current command based on a history search from most recent back
# ^o because sometimes that up arrow is just so far away
bindkey '\e[A' history-beginning-search-backward-end # up
bindkey "^O" history-beginning-search-backward-end
bindkey '\e[B' history-beginning-search-forward-end # down
bindkey "^N" history-beginning-search-forward-end # ^N

bindkey "^[[H" beginning-of-line # home
bindkey "^[[F" end-of-line # end
bindkey "^[[3~" delete-char # delete

# cd to the current git or hg repo root
rr() {
    local dir="."
    until ( [[ -a "$dir/.git" ]] || [[ -a "$dir/.hg" ]] ); do
        dir="../$dir"
        if [[ $dir -ef / ]]; then
            return 1
        fi
    done
    cd $dir
}

# initialize autocomplete here, otherwise functions won't be loaded
autoload -U compinit
compinit

# load every completion after autocomplete loads
for config_file ($ZSH/**/completion.sh) source $config_file
# extraordinarily important: (lets everyone know that the terminal can handle
# color
# I am sure that this line might screw something up somewerhe
# for the moment, I'm only using 256 color terminals anyways :P
export TERM='xterm-256color'

#### Key Bindings

bindkey -v
# vim key bindings, but there are a few emacs bindings I like
bindkey "^A" beginning-of-line
bindkey "^E" end-of-line

# somehow I survived for years without this.  They called it living, but I'm not so sure.
bindkey "^R" history-incremental-search-backward

# pushes the current command to a buffer, lets you do something else, then
# brings you back to what you were doing
bindkey "^P" push-line
bindkey "^L" clear-screen

alias crev="git rev-parse HEAD | cut -c 1-8 | tee >(pbcopy)"
alias cbrev='echo "$(git rev-parse HEAD | cut -c 1-8) ($(git branch | grep '"'*'"' | cut -c 3-))" | tee >(pbcopy)'

# make it so you can edit current command in vim by pressing <ESC><v>
autoload -z edit-command-line
zle -N edit-command-line
bindkey -M vicmd v edit-command-line

# add fuzzy search to zsh
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
